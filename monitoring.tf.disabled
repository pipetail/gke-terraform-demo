locals {
  istio_services = ["athena", "atlas", "console", "helios", "hera", "hermes", "selene", "soteria"]
  namespace      = "develop"
}

resource "google_monitoring_dashboard" "dashboards" {
  for_each       = toset(local.istio_services)
  dashboard_json = file("../../dashboards/stackdriver/dev/${each.value}-service.json")
  project        = var.project
}

# ## SLOs
resource "google_monitoring_slo" "latency" {
  for_each            = toset(local.istio_services)
  service             = "ist:${var.project}-location-${var.region}-${module.gke.name}-${local.namespace}-${each.value}"
  display_name        = "99% - Latency < 1000ms - Rolling 7 days"
  goal                = 0.99
  rolling_period_days = 7
  request_based_sli {
    distribution_cut {
      distribution_filter = "metric.type=\"istio.io/service/server/response_latencies\" resource.type=\"istio_canonical_service\" resource.labels.canonical_service_name=\"${each.value}\""
      range {
        max = 1000
      }
    }
  }
}

resource "google_monitoring_slo" "availability" {
  for_each            = toset(local.istio_services)
  service             = "ist:${var.project}-location-${var.region}-${module.gke.name}-${local.namespace}-${each.value}"
  display_name        = "99% - Availability - Rolling 7 days"
  goal                = 0.99
  rolling_period_days = 7
  request_based_sli {
    good_total_ratio {
      # good_service_filter = "metric.type=\"istio.io/service/server/request_count\" resource.type=\"istio_canonical_service\" resource.labels.canonical_service_name=\"${each.value}\""
      bad_service_filter   = "metric.type=\"istio.io/service/server/request_count\" resource.type=\"istio_canonical_service\" metric.labels.response_code>=\"500\" resource.labels.canonical_service_name=\"${each.value}\""
      total_service_filter = "metric.type=\"istio.io/service/server/request_count\" resource.type=\"istio_canonical_service\" resource.labels.canonical_service_name=\"${each.value}\""
    }
  }
}
